++++++++++++++++++++++++++ FORMAL MATHEMATICAL SYSTEM +++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

##################### Elementary formal system ###############
===================== Motivation ==========================
=========== 15
"formal" is applied to math system
"mechanical" is applied to operations(procedures)
  intuitively it can be thought as one which can be performed on "computing machine"

if we define a mechanical operation directly("e.g. in terms of Turing machine")
we would then define "formal" system as one whose set of theorems would be
generated by such a machine.

(following the lines of Post)
we can first define a FORMAL SYSTEM
directly and define an OPERATION to be "MECHANICAL" or "RECURSIVE" if it
is computable In some formal systems.

general notion of a -formal system will then be defined in terms of EFS.
===================== DEF of ELEMENTARY FORMAL SYSTEM =======================
======= 16
-INITIAL SIGNs
-DEFINABILITY BY RECURSION
  [AFAIU  it is actually  example when by using computation(vichislenie)
          set of strings are genereated, so it is example computation function
          which assign to one string another sting, by using axioms like Px->Pxa
          and modus ponens(detachment)]
======= 17
A SIMPLE EXAMPLE OF AN ELEMENTARY FORMAL SYSTEM.
|- the SYMBOLS a and b are called the -INITIAL SIGNS;
|- "x" is called a VARIABLE (for which we substitute STRINGS in the INITIAL SIGNS).
|- the SYMBOL "->" is called the -IMPLICATION SIGN,
|- the LETTER "S" is an example of a -PREDICATE
|                 (PREDICATES are used to -REPRESENT SETS and RELATIONS***["s*r"]).
|                                     REPRESENTS the set of @ALTERNATING STRINGS.(p17)
|(AFAIU  "s*r" of symbols, and under interpretation "s*r" of domain of elements what we mean)
|
|With this example in mind, we now give a precise definition of elementary formal systems.

-ALPHABET K we mean an ORDERED FINITE SET of ELEMENTS called -SYMBOLS, -SIGNS, or -LETTERS of K.
-WORD -EXPRESSION -STRING in K.
    Any FINITE LINEAR SEQUENCE (ORDERED n-TUPLE) of SYMBOLS of K
-K_ be the SET of all WORDS in K.

For any n SYMBOLS x1..xn of K we let x1..xn be that WORD in K whose i-th symbol is xi[i < n].
  We call n the -LENGTH of this WORD.
Y is also a word y1..ym in K
    XY to be the word x1x2...xny1y2...ym â€” i.e., that word of LENGTH n + m
    whose i-th symbol is xi, for i <= n, and whose j-th symbol is y_j-n, for j > n.
  
  XY the -PRODUCT or -CONCATENATION of X and Y.
  The OPERATION of CONCATENATION is clearly ASSOCIATIVE, but NON-COMMUTATIVE
  (unless K consyst only one symbol)

======= 18
  K,L are ALPHABETS, @SYMBOL of K is also a symbol of L  => ..
  .. =>  K a -SUB-ALPHABET of L - "K TO L",  L an -EXTENSION of K.
 
-EFS -E (E)    (EFS can be looked at as variants of the canonical languages of Post)
-ELEMENTARY FORMAL SYSTEM E over an ALPHABET K we mean a collection of the following items:
  (1) The alphabet K.
  (2) Another ALPHABET of SYMBOLS called -VARIABLES
  (3) Another ALPHABET of SYMBOLS called -PREDICATES.
        each of which is assigned a unique positive integer called its DEGREE.
  (4) Two more SYMBOLS called the IMPLICATION sign and the PUNCTUATION sign.
  (5) A FINITE SEQUENCE A1..Az of -STRINGS which are WELL-FORMED FORMULAs, according to the 
       definition given below; these STRINGS are called the -AXIOMS of the SYSTEM E.

  (1)-(4) MUTUALLY DISJOINT 

  a1.. an be the SYMBOLS of K.
-TERM t of (E)
    we mean @STRING composed of the ai and variables (or either one alone)
    [exmp] alxya2ya1 is a TERM.
-ATOMIC FORMULA (-WELL-FORMED FORMULA  -WFF) of (E)
    an EXPRESSION of the form Pt1..tm, where  ...
    P is a predicate of degree m, t1..tm are TERMS.

-WELL-FORMED FORMULA (-WFF or sometimes just -FORMULA) -F of (E)
    an ATOMIC (WELL-FORMED) FORMULA F   xor  an EXPRESSION of the form F1->..->Fn where each Fi is ATOMIC.
    The ATOMIC FORMULAS F1..Fn are called the -ATOMIC COMPONENTS
    of the COMPOUND FORMULA F1->..->Fn.
    @F1 is called an ATOMIC COMPONENT of itself.

    In a compound formula F1->..->Fn, the ARROW is to be interpreted as IMPLICATION with
                                                                association to the right;
    [exmp]
    "F->F2->F3" is to be read "F1 IMPLIES that F2 IMPLIES F3" or "F1 implies (F2 implies P3)"
    We note that this can also be read "If F1 and F2 are both true, so is F3".
    More generally, F1->..->Fn can be read "Fn is IMPLIED by the CONJUNCTION of the PREMISSES F1,F2,..,Fn"

    we refer to F1,..Fn-1 as the -PREMISSES and Fn as the -CONCLUSION.
    for two arbitrary WFFs X1 and X2, it is a mistake to read X1->X2 as "X1 implies X2";
    this can only be done providing X1 is atomic.

-INSTANCE of WFF X
    @STRING obtained from X by SUBSTITUTING STRINGS in K for all VARIABLES. 
-SENTENCE    is   WFF with no VARIABLES

-THEOREM -PROVABLE STRING of (E)
  @STRING which is either an AXIOM of (E), or is DERIVABLE from the AXIOMS of (E)
  by a FINITE number of APPLICATIONS of the following two RULES - called  ..
-RULEs of INFERENCE
| RULE 1.
|     Substitution of words in K for variables.
| RULE 2. (Rule of -DETACHMENT or -MODUS PONENS).
|     Inferring formula X2 from X1 and X1-> X2, providing X1 is ATOMIC.
|
|(constitute a basis for the construction of @FORMAL SYSTEMS (as they are to be defined))

======= 19
(E) be an EFS over an ALPHABET K.
Let K' be the ALPHABET consisting of the SYMBOLS of K, together with
the VARIABLES, PREDICATES, IMPLICATION sign and PUNCTUATION sign of (E).
It may sometimes happen that we wish to consider simultaneously and EFS (E)' over the alphabet K';
=> the VARIABLES of (E) are not VARIABLES of (E)', but are rather some of the INITIAL SYMBOLS of (E)'
(and we must then be careful to use different names for the two classes of VARIABLES)
Similar remarks apply to the PREDICATES, IMPLICATION sign and PUNCTUATION sign.
Thus these -GRAMMATICAL CATEGORIES are only RELATIVE to a given EFS.

===================== ALTERNATIVE FORMULATION =======================
======== 20 by von Neumann

  ...here my ideas from Penrose(p100)  about include recursively
  ...Godel proposition G1,G2.. is may start to be wrong.

@SENTENCE DERIVABLE from A1..Az by SUBSTITUTION and MODUS PONENS,
can as well be DERIVED from the INSTANCES of A1..Az by MODUS PONENS alone.
- AXIOM SCHEMA
*but now each A1 instead of being called an AXIOM of the SYSTEM is called an AXIOM SCHEMA;
the AXIOMS are now defined to be the INSTANCES of the AXIOM SCHEMATA.

=> EFS(looked at in the second sense*) has an INFINITE number of AXIOMS, but a FINITE number of AXIOM SCHEMATA.
  A THEOREM would then be defined as any SENTENCE DERIVABLE from the AXIOMS
  (i.e. !INSTANCES of the AXIOM SCHEMATA) by successive application of MODUS PONENS.
  [AFAIU](i.e. SYMBOLs of AXIOM SCHEMATA is VARIABLEs,
            and by changing it to CONSTANTs we get an AXIOM)

  As remarked before, the SENTENCES PROVABLE in an EFS are the same
  regardless of which of the two senses we use.

======================= REPRESENTABILITY ======================================
======= 20
-REPRESENTS
P be PREDICATE of DEGREE 1 in an EFS (E) over K,   W be a SET of WORDS in K.
P REPRESENTS W in (E)   <=>  @WORD X in K, the following condition HOLDS:
                              X IN W  <=> PX is PROVABLE in (E)

P is a PREDICATE of (E) of DEGREE n  => ..
 .. => P REPRESENTS the SET of @n-TUPLES (X1..Xn) such that PX1..Xn is PROVABLE IN (E)

-ATTRIBUTE (only by smullyan)
    collective termin for SETs and RELATIONs;
    for @SET S an ATTRIBUTE in S  is  [SUBSET of S  xor  SET of n-TUPLES of ELEMENTS of S]

-FORMALLY REPRESENTABLE -f.r.
    ATTRIBUTE W of WORDS in K is called FORMALLY REPRESENTABLE over K  <=>  
    is REPRESENTABLE in some EFS over K.
  [ IMO  
        formally representable may mean that we can pick out proper axiom to 
        represent some formal system, like GROUP THEORY, but now we don't
        consider INTERPRETATIONs and MODEls
  ]
-SOLVABLE(see p23-24[informal])
    W SOLVABLE over K  <=>  both W and its COMPLEMENT !W are f.r. over K.

    [AFAIU  here exist relation with Godel theorem, that is if W is not SOLVABLE(razrewima9)
            => @word from W what cant be derived in any EFS over K]

    W a RELATION of DEGREE n,
    !W is UNDERSTOOD to be the -COMPLEMENT of W RELATIVE to the SET of @n-TUPLEs of WORDs(K_) in K.

W is an ATTRIBUTE in K_,  L is an EXTENSION of K
| W is REPRESENTABLE in some EFS over L   =>  W necessarily REPRESENTABLE in some EFS over K ???
|
| We shall subsequently answer this question affirmatively.

======= 21
-single proof form smullyan
  here smullyan continue his reasoning about representability and prove next:

  (i) for any even number X, EX is provable in the system; (ii) if EX is provable in the system, then X is even.

======= 22

-SOLVABLE FUNCTION
-FUNCTION f(x1..xn) from n-TUPLES of WORDS in K to WORDS in K
    f is FORMALLY REPRESENTABLE over K  <=>  the RELATION f(x1..xn)=y is FORMALLY REPRESENTABLE over K,
    f is SOLVABLE over K  <=>  the RELATION f(x1..xn)=y is SOLVABLE over K.

=========================== Mathematical Systems ===============================
======= 23
-MATHEMATICAL SYSTEM (M) -M
By a MATHEMATICAL SYSTEM (M) is usually meant a collection of at least the following items:
  (1) An alphabet K.                                              ------ {a,b,c} 
  (2) A SET A of WORDS in K called AXIOMS                         ------ {abc, cb, ac}
  (3) A FINITE SET R1..Rm of RELATIONS in K_ called RULES OF INFERENCE.- {<cd,as>, <abc,b>, <ac,a> }

-PROOF in M
  @SEQUENCE (X1..Xn) of WORDS in K such that      @i<=n 
  Xi is an AXIOM   -xor-
  $i1..ir ( @[i1..ir < i] such that (Xi1..Xir, Xi) stands in one of the RELATIONS R1..Rm.)

  A PROOF (X1..Xn) is also called a PROOF of the last TERM Xn.
  A WORD X is -PROVABLE in (M) or a -THEOREM of (M)  <=> $PROOF of it in (M).
  The SET of all THEOREMS of (M) shall be denoted by -T

(M) to be a -FORMAL MATHEMATICAL SYSTEM  <=>  the SET T of THEOREMS of (M) Is FORMALLY REPRESENTABLE over K.
[5]** this definition cover all math systems (detail in smullyan;))

T is SOLVABLE over K  =>  (M) is (-SOLVABLE | -DECIDABLE | to -ADMIT of a DECISION PROCEDURE)

-Church's THEOREM is that there exist FORMAL SYSTEMS for which there is no DECISION PROCEDURE.

!!!Informal discussion 1
-COMPUTING MACHINE    @MACHINE which generates some FORMALLY REPRESTABLE(f.r.) SET(of WORDS) ....

######################## Recursive Enumerability ###############################
================ Recursive Enumerable attributes of positive integers ==========

======= 24
-D is ALPHABET {"1","2"}  (D)
-ELEMENTARY DYADIC ARITHMETIC    is     @FORMAL SYSTEM over D

-DYADIC NUMERAL -NUMERAL
  STRING dndn-1..d1d0 where @di is either "1" or "2", is called a DYADIC NUMERAL
  and represents the number d0 + 2d1 + 4d2 + ... + 2^ndn.

  This representation of numbers, which we call DYADIC is, like the usual -BINARY REPRESENTATION
  using "0" and "1", unique; moreover it has, for our purposes, certain technical advantages.

  we shall -IDENTIFY the DYADIC NUMERALS with the numbers which they represent.
  we order the dyadic numerals -LEXICOGRAPHICALLY
  ( i.e., according to length and alphabetically within each group of the same length )
   => the position which @NUMERAL has, in this SEQUENCE, is the same as the NUMBER which it -DESIGNATES 

-RECURSIVELY ENUMERABLE ATTRIBUTE OF POSITIVE INTEGERS  is
  one which is REPRESENTABLE in some ELEMENTARY DYADIC ARITHMETIC.
  
  [AFAIU   this numbers set is called recursively enumerable, since in EFS
           all such numbers can be described by axioms what used IMPLICATION only!!
           and as result inductive definition, i.e. 
           Pa   -   basis
           Pa->Pab   - inductive step   =>   all numebrs defined in such way are 
                                                            DEFINED RECURSIVELY]

-RECURSIVELY ENUMERABLE ATTRIBUTE whose COMPLEMENT is also -RECURSIVELY ENUMERABLE is called -RECURSIVE 

    [HOFSTADTER] $RECURSIVELY ENUMERABLE SETS which are NOT RECURSIVE.


  in this DEF of RECURSIVE ENUMERABILITY, our choice of 2 as a -BASE was arbitrary
  whatever BASE n we chose, the DEF of "RECURSIVELY ENUMERABLE" would be EQUIVALENT

  we DEF RECURSIVE ENUMERABILITY(-r.e) only for ATTRIBUTES of POSITIVE INTEGERS.
  But this can be extended to a DEF of r.e.  for ATTRIBUTES of NON-NEGATIVE INTEGERS, as follows:
    @ATTRIBUTE W(x1..xn) of NON-NEGATIVE INTEGERS
    W+ such that: W+(x1..xn) <=> W(x1+1..xn+1).
    W to be a r.e. ATTRIBUTE of NON-NEGATIVE INTEGERS <=>
      ...  W+ is a r.e. attribute of POSITIVE INTEGERS

  However, we shall be concerned with r.e ATTRIBUTES of POSITIVE INTEGERS only.

===================== Godel Numebring =========================================
========= 25

-GODEL NUMBERING informal introducion
 |
 |suppose we have a THEORY which talks about POSITIVE INTEGERS.
 |We are interested in "keeping track" of the SENTENCES of the THEORY within the THEORY itself;
 |this cannot be done directly since the THEORY talks about NUMBERS and not about SENTENCES.
 |We can, however, achieve the same result indirectly by assigning a NUMBER to @SENTENCE
 |(the so-called "GODEL NUMBER" of the SENTENCE) and then translating any STATEMENT about the
 |SENTENCES to the corresponding STATEMENT about their GODEL NUMBERS.

K is ALPHABET
-GODEL NUMBERING of K
  @1-1 FUNCTION g from K_ INTO (not necessarily ONTO) the SET N of NATURALs.  [AFAIU     g(@K_) = @N ]
  Thus g is a 1-1 MAPPING which assigns to @WORD X in K a UNIQUE NUTURALs g(X).
  [AFAIU   like SEQEUNCE from elemetns of K_ , but inst of <n,k_> we get <k_,n>]

 -X0 is g(X) 
     for @ATTRIBUTE W in K_,
 -W0 -corresponding ATTRIBUTE of GODEL NUMBERS
  [i.e.]
    W0 = g(W) = <g(X1)..g(Xn)>      (<X1..Xn> IN W)
  

There are 2 types of GODEL CORRESPONDENCES(NUMBERING) which we shall frequently employ in this study.
                                                  (3 type will be employed in Chapter 4.)
K is an ORDERED ALPHABET (a1..an).
We wish to assign GODEL NUMBERS to the @STRINGS in K.
  -LEXICOGRAPHICAL GODEL NUMBERING [1st type]
  | consists of ordering the @STRINGS in K in LEXICOGRAPHICAL SEQUENCE,
  | and then assigning to @STRING, its position in that SEQUENCE.
  | @NATURALs are used up in this CORRESPONDENCE. [i.e.] g ONTO N

  -DYADIC GODEL CORRESPONDENCE(NUMBERING) [2nd type]
  | consist in assigning to @STRING X the (DYADIC)NUMERAL(NUMBER) which results
  | from X by replacing @occurrence of a1 by 12, a2 by 122, ..., an by 122...2(n 2-ek)
  | [e.g.]the dyadic Godel number of a3a4a1a2 is 12221222212122.
  |
  | henceforth we abbreviate the NUMERALs 12,122,1222... as "g1","g2",'g3"...
  | Thus the DYADIC GODEL NUMBER of a3a4a1a2 is g3g4g1g2

  DYADIC GODEL CORRESPONDENCE has the advantage of being an ISOMORPHISM with respect to CONCATENATION
  [i.e.]
    x is the DYADIC GODEL NUMBER of X, y of Y  =>  xy (i.e. x followed by y)
                                  is the GODEL NUMBER of XY.
    Stated otherwise, (XY)0 = X0Y0
    [that is ... exmp]
                        X=a1a3 Y=a2a4    a1a3a2a4 = 12122212212222(g1g3g2g4)

====== 26

-ADMISSIBLE (AFAIU  here K={a1,a2...} too)
| Godel numbering is ADMISSIBLE   <=>                     [AFAIU 
|   it SATISFIES the condition that for @ATTRIBUTE W in K_,   $(predicate for W in K) =>
|   W is f.r. over K  <=>   W0 is r.e.,                       $(predicate for W0 in DYADIC FORM SYS)
|   W is SOLVABLE over K <=>  W0 is RECURSIVE              ]
| 
|   both the LEXICOGRAPHICAL and the DYADIC GODEL NUMBERINGS are ADMISSIBLE.

THE DYADIC CORRESPONDENCE IS THE ONLY ONE WHICH WE SHALL USE IN THIS CHAPTER.

|----[AFAIU---here talking about giving---a GODEL DYADIC NUM to DYADYC SYSTEM ]-----
|
| FUNCTION  g assigns to @STRING X its (DYADIC) GODEL NUMBER X0.
| SYMBOLS "1" and "2" are themselves in K  =>  @NUMERAL n itself has a GODEL NUMBER n0;
|
| FUNCTION g0 assigns to @n the NUMBER n0.
|
| K is ORDER so that "1" and "2" are respectively the first 2 SYMBOLS.
| =>  [g0(1)=12, g0(2)=122] , [for @NUMBER xy, g0(xy) is g0(x) followed by g0(y)]
|                               (here xy means x followed by y, not x times y).
| 
| RELATION g(x) = y is f.r. over K,
| since it is represented by "P" in that EPS. over K whose AXIOMS are:
|     P1, 12
|     P2, 122
|     Pa3, 1222
|     Pan, 12..2(n 2-ek)
|     Px, y->Pz, w->Pxz, yw
|
| Also the RELATION g0(x)=y  is r.e.(that is f.r. over D),
| since it is REPRESENTED by P in that RECURSIVE DYADIC ARITHMETIC (EFS over D) whose axioms are:
|     P1, 12
|     P2, 122
|     Pxy->Pz, w->Pxz, yw

========================= The Universal system U ===================================
====== 27
INFORMALLY
  We now wish to construct a so-called "-UNIVERSAL SYSTEM" in which
  we can, so to speak, express all PROPOSITIONS of the form that such and
  such a number is in such and such a RECURSIVELY ENUMERABLE SET.

  Preparatory to the construction of U, we need a device for "-TRANSCRIBING"
  @ELEMENTARY DYADIC ARITHMETICS into one SINGLE FINITE ALPHABET.

-TRANSCRIBED ELEMENTARY DYADIC ARITHMETIC (henceforth abbreviated -T.A. )
|                         a system like an ELEMENTARY DYADIC ARITHMETIC B.
|
| except that instead of taking our VARIABLES and PREDICATES to be INDIVIDUAL SYMBOLS*,
|                   [AFAIU  indiv. symbols means separate(of alphabet) set of symbols]*
| we take 3 SIGNS  v ' p
| - VARIABLE is any of the words v',v'',v'''...
| - PREDICATE is a STRING of p's followed by a STRING of ACCENTS;
| - DEGREE of the PREDICATE is the number of p's
|
| We thus have one single finite alphabet K;
|     K7 = {1 2 v , p ' ->}
| from which @T.A's are constructed.        Axioms :382
|
| REPRESENTABILITY in an arbitrary ELEMENTARY DYADIC ARITHMETIC ===
| ... REPRESENTABILITY IN ONE IN TRANSCRIBED NOTATION.
| =>
|   an ATTRIBUTE is r.e. <=> it is REPRESENTABLE in some T.A.

-UNIVERSAL SYSTEM -U (U)
WE CONSTRUCT OUR -SYSTEM U AS FOLLOWS.
|
|  We extend K7 to an ALPHABET K8 by adding one new symbol "*".
|  To @T.A. whose AXIOMS are A1..Ak we wish to associate a UNIQUE STRING in K8;
|
|  this string shall be *A1*A2*..*Ak*.   Such a STRING B is called a -BASE (after Post).
| 
|  -SENTENCE of U   -   a STRING of the FORM BX, where B is a BASE and X is a T.A. FORMULA(WFF).
| 
|  Alternatively a SENTENCE is an EXPRESSION of the form *A1*A2*...*Ak*X, where A1,..Ak,X are T.A. FORMULA.
| 
|-COMPONENTS of B
|   The STRINGS A1..Ak are called the COMPONENTS of B.
|-TRUE in U
|   the above SENTENCE TRUE in U  <=>  X is PROVABLE in that T.A. whose AXIOMS are A1..Ak


 |U is presented as a so-called -SEMANTICAL SYSTEM, rather than as a -SYNTACTICAL SYSTEM,
 |in the sense that we have defined what it means for a SENTENCE to be "TRUE" without
 |reference to its PROVABILITY in @AXIOMATIC SYSTEM.

 |-U AS AN AXIOMATIC
 |
 |Alternatively, we could present U AS AN AXIOMATIC system as follows:
 |AXIOMS:
 |  @EXPRESSIONS of the FORM BX, where B is a BASE and X is a COMPONENT of B.
 |RULES OF INFERENCE:
 |  (1) X1 is an INSTANCE of X  =>  BX1 is DIRECTLY DERIVABLE from BX.      (AFAIU like SUBSTITUTION)
 |  (2) BX is IMMEDIATELY DERIVABLE from the two SENTENCES BF1, BF1->X  providing F1 is atomic.


The -PROVABLE SENTENCES of this AXIOMATIC SYSTEM are precisely
the same as the "TRUE" SENTENCES of U as we have defined them.

This AXIOMATIC SYSTEM though not an "ELEMENTARY" FORMAL SYSTEM is
nevertheless a -FORMAL SYSTEM
  in the sense that its SET of PROVABLE SENTENCES is REPRESENTABLE in an ELEMENTARY FORMAL SYSTEM.

======= 28

-REPRESENTABILITY IN U.
|  PREDICATE H of U (not to be confused with a T.A. PREDICATE)
|    EXPRESSION of the form BP, where B is a -BASE *A1*A2*..*Ak* and P is a T.A. predicate.
|
|    H REPRESENTS (in U) the SET of ALL n-TUPLES (i1..in)[of DYADIC NUMERALS]
|    such that Hi1..Hin is TRUE in U
|   [i.e.]
|    such that Pi1..Pin is PROVABLE in that T.A. whose axioms are A1..Ak.
|     !!!!![here n-TUPLEs (i1..in) is analog p in Tn(m)=p by --PENROSE--]
|  =>
|    H REPRESENTS the very ATTRIBUTE in U that P REPRESENTS in the T.A. associated with B.
|
|    an ATTRIBUTE is REPRESENTABLE in U  <=>  it is r.e.
|     !!!!![that is  p numbers what can be computed on TURING MACHINE]
|
|    in this sense that U is called a "-UNIVERSAL SYSTEM" for @r.e. ATTRIBUTES.

-S (S) is the SET of @SENTENCES of U,     -T the set of @TRUE SENTENCES of U.
|
| For @SET W of words in K8, we understand !W as the COMPLEMENT of W RELATIVE to K8.

 X0 is the DYADIC GODEL NUMBER of X,
 for @SET W of EXPRESSIONS in K8, W0 is the corresponding SET of GODEL NUMBERS
 â€” in particular -T0 is the SET of GODEL NUMBERS of the TRUE SENTENCES of U

 !!!!!![here Godel number for W is like to how Penrose encoded Turing machine
             instruction in number   101->110R => some numebers of 1 and 0]

======================== THE RECURSIVE UNSOLVABILITY OF U =====================

!!!WE NOW COME TO THE CENTRAL POINT OF THIS CHAPTER.

  The SET T of TRUE SENTENCES of U is f.r. over K8,
  the corresponding set T0 of Godel numbers is RECURSIVELY ENUMERABLE
  (we prove this in the appendix to this chapter)

  POST'S FORM OF -CHURCH'S THEOREM: viz.   ---   SET T is NOT RECURSIVE.
  To prove that T0 is not r.e. we employ a variant of the famous DIAGONALIZATION
    argument of GODEL

  X - sentence of U, A - @SET of NUMBERs.
  X is a GODEL SENTENCE for A <=> 
  [X is TRUE and its GODEL NUMBER is in A]  xor ...
  ... X is FALSE (NOT TRUE) and its GODEL NUMBER is NOT IN A.
Stated otherwise:
                    X IN T <=> X0 in A.

  there cannot exist a GODEL SENTENCE for the SET T
  [i.e.](for the SET of @NUMBERS which are NOT IN T ),
  for such a SENTENCE would be TRUE <=> it were FALSE.
=>
  Therefore to prove that T is not r.e. it suffices to show that
  for @r.e. set A there is a Godel sentence for A.

For @STRING X in K0, we define its -NORM or -DIAGONALIZATION to be the STRING XX0
â€” i.e.
  X followed by its own GODEL NUMBER (written in dyadic notation).
  X is a predicate H of U => the NORM HH0 of H is a SENTENCE of U
  (this SENTENCE intuitively expresses the proposition that
  the GODEL NUMBER of H lies in the r.e SET REPRESENTED by H)

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
